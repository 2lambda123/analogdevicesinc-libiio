#!/bin/bash

datestr=$(date "+%d %B %Y")
header="../iio.h"

cmk="../CMakeLists.txt"

major=$(grep "set[[:space:]]*([[:space:]]*LIBIIO_VERSION_MAJOR" ${cmk} | \
	sed -e 's:^[[:space:]]*set[[:space:]]*([[:space:]]*LIBIIO_VERSION_MAJOR[[:space:]]*::' \
	    -e 's:)::')
minor=$(grep "set[[:space:]]*([[:space:]]*LIBIIO_VERSION_MINOR" ${cmk} | \
	sed -e 's:^[[:space:]]*set[[:space:]]*([[:space:]]*LIBIIO_VERSION_MINOR[[:space:]]*::' \
	    -e 's:)::')


cat <<EOF
.\" Copyright (c) 2018 Robin Getz
.\" Copyright (c) 2018 Analog Devices Inc.
.\"
.\" Permission to use, copy, modify, distribute, and sell this
.\" documentation for any purpose is hereby granted under the
.\" Creative Commons Attribution-ShareAlike 4.0 International Public License
.\" https://creativecommons.org/licenses/by-sa/4.0/
.\"
.\" This file is mostly autogenerated.
.\"
.if n .po 0
.TH INTRO 3LIBIIO "${datestr}" "libiio-${major}.${minor}"
.SH NAME
libiio-${major}.${minor} \- introduction to
.IR libiio ,
a library for interacting with the Linux
.SM IIO
subsystem and devices
.SH SYNOPSIS
.B "#include <libiio.h>"
.sp
cc file.c
.B -liio
.SH DESCRIPTION
.I libiio
is a library used to interface to the
.I "Linux Industrial Input/Output (IIO)"
Subsystem. The Linux
.I IIO
subsystem is intended to provide support for devices that in some sense
are analog to digital or digital to analog converters (ADCs, DACs). This
includes, but is not limited to ADCs, Accelerometers, Gyros, IMUs,
Capacitance to Digital Converters (CDCs), Pressure Sensors, Color,
Light and Proximity Sensors, Temperature Sensors, Magnetometers, DACs,
DDS (Direct Digital Synthesis), PLLs (Phase Locked Loops),
Variable/Programmable Gain Amplifiers (VGA, PGA), and RF transceivers.
You can use
.I libiio
natively on an embedded Linux target (local mode), or use libiio to
communicate remotely to that same target from a host Linux, Windows
or MAC over USB, Ethernet or Serial.
.SH "DATA TYPES"
The library makes use of C structures and typedefs to promote portability,
and is known to run on various GNU/Linux distributions, Android, macOS,
Windows, and mbed. The main C structures are:
.in +.5i
EOF

tmp=$(grep @struct ${header} | sed 's:^[[:space:]]*\*[[:space:]]*@::g' | awk '{print length($0)}' | sort -n | tail -1)
echo  .TP $(expr $tmp - 5)

grep @struct ../iio.h -A 1 | \
	sed -e 's:^[[:space:]]*\*[[:space:]]*@::g' \
       	    -e 's:struct[[:space:]]*:.TP\n.B :' \
	    -e 's:brief[[:space:]]*::' \
	    -e 's:[[:space:]]*\*\/[[:space:]]*::' \
	    -e '/^--$/d'

cat <<EOF
.LP
.in -.5i
.SH "LIST OF ROUTINES"
The following routines are part of the library. Consult the Doxygen pages
for details on their operation (in the SEE ALSO section).
EOF

IFS="
"
long=0
longest=""

#go over things by groups
for i in $(grep -e defgroup ${header} |sed 's|\/\*\*[[:space:]]*||')
do
	echo .sp
	echo $i | sed 's:@defgroup ::'

	n=$(grep -e defgroup ${header} | grep -A 1 $i | tail -1 | sed 's|\/\*\*[[:space:]]*||')
	f=$(cat ${header} | awk "/${i}/{f=1;next} /${n}/{f=0} f" | grep __api | \
		awk 'split(substr($0, match($0, /iio[a-z_]*\(/)), a, " ") {print a[1]}' | \
		sed 's/(.*$//' | grep -ve "^#undef")
	for func in ${f}
	do
		if [ $(echo $func | wc -c) -gt $long ] ; then
			long=$(echo $func | wc -c)
			longest=$func
		fi
	done
	echo .in +.5i
	echo .TP $(echo ${longest} | wc -c)
	echo .TP
	echo "\fIFunction\fP"
	echo "\fIDescription\fP"

	for func in ${f}
	do
		echo -e ".TP\n.B ${func}"
		l=$(grep -B 20 ${func} ${header} | \
			grep @brief | \
			tail -1 | \
			awk '{$1=$2=""; print $0}'| \
			sed -e 's:^[[:space:]]*::' -e 's:(.*<.*)::')
		echo ${l}
	done
	echo .LP

done

cat <<EOF
.SH DIAGNOSTICS
All error codes are returned as negative number return codes.
In these cases, the value can be passed to the
.IR iio_strerror
routine.
.SH "SEE ALSO"
.BR iio_adi_xflow_check (1),
.BR iio_attr (1),
.BR iio_genxml (1),
.BR iio_info (1),
.BR iio_readdev (1),
.BR iio_writedev (1),
.BR iio_reg (1)
.PP
libiio home page:
.BR https://wiki.analog.com/resources/tools-software/linux-software/libiio
.PP
libiio code:
.BR https://github.com/analogdevicesinc/libiio
.PP
Doxygen for libiio
.BR https://analogdevicesinc.github.io/libiio/
.SH BUGS
All bugs are tracked at:
.BR https://github.com/analogdevicesinc/libiio/issues
.SH LICENSE
The
.IR libiio
source code and resulting binaries (libraries) are released and distributed under the GNU Lesser General Public License, v2.1.
.br
The
.IR libiio
test application source code and resulting binaries (executables) are released and distributed under the GNU General Public License, v2.1
.br
The
.IR libiio
example application source code and resulting binaries (executables) are released under their own licenses, as defined by their authors.
.br
The
.IR libiio
man pages are released and distributed under the Creative Commons Attribution-ShareAlike 4.0 International Public License.
EOF
