#!/bin/sh -xe

if [ "x${COVERITY_SCAN_PROJECT_NAME}" != "x" ] ; then exit 0; fi

handle_default() {
	mkdir -p build
	cd build
	cmake -DENABLE_PACKAGING=ON -DDEB_DETECT_DEPENDENCIES=ON ..
	make && make package
	sudo dpkg -i ${LIBNAME}*.deb
	if [ -n "${GH_DOC_TOKEN}" ] && \
			[ -f "./generateDocumentationAndDeploy.sh" ] ; then
		sh generateDocumentationAndDeploy.sh
	fi
	cd ..
}

handle_centos() {
	sudo docker run --rm=true \
		-v `pwd`:/${LIBNAME}:rw \
		centos:centos${OS_VERSION} \
		/bin/bash -xe /${LIBNAME}/CI/travis/inside_centos_docker.sh ${LIBNAME} ${OS_VERSION}
}

handle_ubuntu_docker() {
	sudo docker run --rm=true \
		-v `pwd`:/${LIBNAME}:rw \
		ubuntu:${OS_VERSION} \
		/bin/bash -xe /${LIBNAME}/CI/travis/inside_bionic_docker.sh ${LIBNAME}
}

LIBNAME="$1"
OS_TYPE=${2:-default}
OS_VERSION="$3"

handle_${OS_TYPE}

